1.) The Milestone 1 of Assignment had some challenging functions to deal with, but to be completely honest the most challenging among all of them was the "inputCString()" function where I was having trouble with the output. The output wwhen the user was supposed to input CATS it should have completed the test but what happened in my program was it was printing error when the input was CATS and infact the urge to do it by myself and not ask other led me to not even submit my assignment on time. The mistake what I did was not changing the counter variable to 0 which infact stored all the previous value of the inputs and led to the error in output also I kept the initialzation of the string str to ' \0 ' out of the loop which was supposed to be kept inside the loop. Hence, doing trial and error helped me finally to get a solution and I am relieved with my work.

2) Yes, sometimes assigning variables to "safe empty state" is a good thing. The main difference between assigning 0 and NULL is 0 will remove the default gibrish numeric values of that variable and assign it to 0 and NULL will just do not assign anything to that variable. We assign 0 to primitive numeric type variables whereas we assign NULL to object references. Whenever we use arrays or when we want to code user friendly we assign the variables to 0 so even if they miss out the variable they will know that the value is 0 and they have not given the correct input. Moreover, NULL will be more in use when pointers are to be used in code which will just create that variable with no value at all.

3.) My attempt in explaining my friend about "standard input buffer" will be that consider there is a garbage in front of you which empties itself whenever you press a button placed over dustbin, whenever someone press the button on dustbin, it will empty itself. Same goes with the "standard input buffer" where it stores temporary input values until someone press <ENTER> key, as soon as the <ENTER> key is pressed all the input values stored in the "buffer" will empty itself and will get ready to store some new values.